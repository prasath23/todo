{"version":3,"sources":["firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","useStyles","makeStyles","theme","paper","position","width","backgroundColor","boxShadow","shadows","padding","spacing","Todo","props","classes","useState","open","setOpen","input","setInput","className","Modal","onClose","onSubmit","e","preventdefault","placeholder","todo","value","onChange","target","Button","variant","color","type","onClick","collection","doc","id","set","text","merge","List","ListItem","ListItemText","primary","secondary","Date","toLocaleString","delete","App","todos","setTodos","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","style","paddingBottom","preventDefault","add","timestamp","FieldValue","serverTimestamp","FormControl","InputLabel","Input","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.361f5e0e.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseApp=firebase.initializeApp({\r\n    // For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\n    apiKey: \"AIzaSyBqbMiQA2zSq4LG8U4JLODErjnC98tywi0\",\r\n    authDomain: \"todo-app-alpha.firebaseapp.com\",\r\n    projectId: \"todo-app-alpha\",\r\n    storageBucket: \"todo-app-alpha.appspot.com\",\r\n    messagingSenderId: \"421472280834\",\r\n    appId: \"1:421472280834:web:cb5c04ccf82b9f64f0a21b\",\r\n    measurementId: \"G-09D1CQB6MT\"\r\n  \r\n})\r\n\r\nconst db=firebaseApp.firestore();\r\nexport default db","import { Button, List, ListItem, ListItemText, Modal } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport db from \"./firebase\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport \"./todo.css\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: \"white\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      width: \"270px\",\r\n      padding:\" 20px\",\r\n      backdropFilter: \"blur(7px)\",\r\n      fontSize:\" 16px\",\r\n      alignItems:\"center\",\r\n      textAlign:\"cemter\",\r\n      borderRadius: \"10px\",\r\n      fontWeight:\"100\",\r\n      height:\"250px\",\r\n      lineHeight:\"100px\",\r\n      justifyContent:\"center\"\r\n    \r\n      }}));\r\n  \r\n\r\nconst Todo=(props)=>{\r\n    const classes=useStyles()\r\n    const [open,setOpen]=useState(false)\r\n    const [input,setInput]=useState(\"\")\r\n    const updateTodo=()=>{\r\n        db.collection(\"todos\").doc(props.todo.id).set({text:input},{merge:true})\r\n        setOpen(false)\r\n        setInput(\"\")\r\n    }\r\n    const handleSubmit=(e)=>{\r\n   e.preventdefault();\r\n   setInput(\"\")\r\n    }\r\n  \r\n    return(\r\n        <div className=\"container\">\r\n            <Modal className=\"modal\"\r\n            open={open}\r\n            onClose={()=>setOpen(false)}\r\n            >\r\n                \r\n                <div className={classes.paper} >\r\n                    <h1>Update your todo</h1>\r\n                    <form onSubmit={handleSubmit}>\r\n                    <input placeholder={props.todo.todo} value={input} onChange={(e)=>setInput(e.target.value)}/>\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" onClick={updateTodo}>update</Button>\r\n                    </form>\r\n                   \r\n                </div>\r\n\r\n            </Modal>\r\n           <List className=\"list\">\r\n               <ListItem>\r\n                   <ListItemText primary={props.todo.todo} secondary={ Date().toLocaleString()}/>\r\n               </ListItem>\r\n               <div className=\"inner\">\r\n               <Button className=\"btn1\" variant=\"contained\" color=\"primary\" onClick={()=>setOpen(true)}>Edit</Button>\r\n               <DeleteIcon className=\"btn2\" onClick={()=>db.collection(\"todos\").doc(props.todo.id).delete()}/>\r\n               </div>\r\n           </List>\r\n        </div>\r\n    )\r\n}\r\nexport default Todo;","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { Button ,FormControl,Input,InputLabel} from '@material-ui/core';\nimport Todo from './Todo';\nimport firebase from 'firebase';\nimport db from './firebase';\nfunction App() {\n\n  const [todos,setTodos]=useState([]);\n   const [input,setInput]=useState(\"\");\n\n  useEffect(()=>{\n   db.collection(\"todos\").orderBy(\"timestamp\",\"desc\").onSnapshot(snapshot=>{\n     setTodos(snapshot.docs.map((doc)=>\n     ({\n       id:doc.id,\n     todo: doc.data().text,\n     })\n     \n     ))\n   })\n  },[])\n   \n   const handleSubmit=(e)=>{\n     e.preventDefault();\n     db.collection(\"todos\").add({\n       text:input,\n       timestamp:firebase.firestore.FieldValue.serverTimestamp()\n     })\n\n     setInput(\"\")\n   }\n  return (\n    <div className=\"App\">\n    <h1 style={{padding:\"40px\",paddingBottom:\"60px\",color:\"white\"}}>It's a beautiful day to go after your dreams!</h1>\n    <form onSubmit={handleSubmit}>\n      <FormControl>\n  <InputLabel style={{color:\"white\"}} > âœ… Write a todo</InputLabel>\n  <Input value={input} onChange={(e)=>setInput(e.target.value)} />\n</FormControl>\n    <Button type=\"submit\" variant=\"contained\" disabled={!input} color=\"primary\">Add Todo</Button>\n    </form>\n    \n      {todos.map((todo)=><Todo todo={todo}/>)}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}